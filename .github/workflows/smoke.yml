name: Smoke Tests

on:
  push: 
    branches:
      un-3143_add_smoketest_to_test_infrastructure_part2
  schedule:
    - cron: '0 12 * * *'  # 12:00 PM UTC = 4:00 AM PT (standard)
  workflow_dispatch:      # enables manual triggering

jobs:
  smoke-test:
    runs-on: ubuntu-latest
    container:
      image: python:3.12-slim

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          apt-get update && apt-get install -y shellcheck
          pip install -r requirements-build.txt
          pip install -r requirements.txt

      - name: Show installed packages
        run: pip freeze

      - name: Start agent server service
        shell: bash
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          AGENT_TOOL_PATH: "./neuro_san/coded_tools"
          PYTHONPATH: ${{ env.PYTHONPATH }}:.
        run: |
          apt-get update && apt-get install -y netcat-openbsd procps net-tools

          nohup python -m neuro_san.service.agent_main_loop > agent.log 2>&1 &
          echo $! > agent.pid
          sleep 2  # Give it a moment to crash if it's going to
      
          if ! ps -p $(cat agent.pid) > /dev/null; then
            echo "❌ Server process failed to start"
            echo "----- agent.log -----"
            cat agent.log            
            exit 1
          fi
      
          echo "✅ Server process started with PID $(cat agent.pid)"

      - name: check status 1
        run: |
          for i in {1..30}; do
            PORT_8080_READY=false
            PORT_30011_READY=false

            if nc -z localhost 8080; then
              PORT_8080_READY=true
            fi

            if nc -z localhost 30011; then
              PORT_30011_READY=true
            fi

            if [ "$PORT_8080_READY" = true ] && [ "$PORT_30011_READY" = true ]; then
              echo "✅ Both ports are ready after awaiting $i seconds"
              break
            fi

            echo "⏳ Waiting for ports 8080 and 30011... ($i/30)"
            sleep 1
          done
      
      - name: Check status
        run: netstat -tuln | grep -E '8080|30011'
      
      - name: Run Pytest
        run: |
          pytest -s --verbose -m "smoke" --timer-top-n 100 -n auto

      - name: Notify Slack on success
        if: success()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "✅ *Smoke Tests Passed* for `${{ github.repository }}` on `${{ github.ref_name }}`"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

      - name: Notify Slack on failure
        if: failure()
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "text": "❌ *Smoke Tests Failed* for `${{ github.repository }}` on `${{ github.ref_name }}`"
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
