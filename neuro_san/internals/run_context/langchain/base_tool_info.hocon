
# Copyright (C) 2023-2025 Cognizant Digital Business, Evolutionary AI.
# All Rights Reserved.
# Issued under the Academic Public License.
#
# You can be released from the terms, and requirements of the Academic Public
# License by purchasing a commercial license.
# Purchase of a commercial license is mandatory for any use of the
# neuro-san SDK Software in commercial settings.
#
# END COPYRIGHT

{
    # ---------------- Bing Search Tool ----------------
    # This configuration defines the Bing Search tool.
    # It initializes a BingSearchResults instance with:
    # - api_wrapper: An instance of BingSearchAPIWrapper
    # - num_results: Specifies that the search should return 3 results
    "bing_search": {
        "class": "langchain_community.tools.bing_search.BingSearchResults",
        "args": {
            "api_wrapper": {
                "class": "langchain_community.utilities.BingSearchAPIWrapper",
            },
            "num_results": 3
        }
    },

    # ---------------- Tavily Search Tool ----------------
    # This configuration sets up the Tavily Search tool.
    # It initializes a TavilySearchResults instance with:
    # - max_results: Specifies that the search should return 5 results
    "tavily_search": {
        "class": "langchain_community.tools.tavily_search.TavilySearchResults",
        "args": {
            "max_results": 5
        }
    },

    # ---------------- Requests Toolkit (Batch of Tools) ----------------
    # This defines a requests toolkit that provides multiple HTTP request utilities.
    # It initializes RequestsToolkit with:
    # - requests_wrapper: An instance of TextRequestsWrapper (used to manage headers)
    # - allow_dangerous_requests: Enables execution of potentially unsafe requests
    # The `.get_tools()` method is called, meaning this toolkit returns multiple tools.
    "requests_toolkit": {
        "class": "langchain_community.tools.requests.tool.RequestsGetTool",
        "args": {
            "requests_wrapper": {
                "class": "langchain_community.utilities.requests.TextRequestsWrapper",
                "args": {
                    # Empty headers dictionary (can be customized)
                    "headers": {}
                }
            },
            "allow_dangerous_requests": true
        }
    },

    # ---------------- Individual HTTP Request Tools ----------------
    
    # GET request tool
    # This sets up a tool that can send HTTP GET requests.
    # It initializes RequestsGetTool with:
    # - requests_wrapper: Manages request headers
    # - allow_dangerous_requests: Enables potentially unsafe requests
    "requests_get": {
        "class": "langchain_community.tools.requests.tool.RequestsGetTool",
        "args": {
            "requests_wrapper": {
                "class": "langchain_community.utilities.requests.TextRequestsWrapper",
                "args": {
                    "headers": {}
                }
            },
            "allow_dangerous_requests": true
        }
    },

    # POST request tool
    # This configures an HTTP POST request tool.
    # It is similar to the GET tool but allows sending data in the request body.
    "requests_post": {
        "class": "langchain_community.tools.requests.tool.RequestsPostTool",
        "args": {
            "requests_wrapper": {
                "class": "langchain_community.utilities.requests.TextRequestsWrapper",
                "args": {
                    "headers": {}
                }
            },
            "allow_dangerous_requests": true
        }
    },

    # PATCH request tool
    # This allows sending PATCH requests, typically used to update resources.
    "requests_patch": {
        "class": "langchain_community.tools.requests.tool.RequestsPatchTool",
        "args": {
            "requests_wrapper": {
                "class": "langchain_community.utilities.requests.TextRequestsWrapper",
                "args": {
                    "headers": {}
                }
            },
            "allow_dangerous_requests": true
        }
    },

    # PUT request tool
    # This allows sending PUT requests, which are used to replace resources.
    "requests_put": {
        "class": "langchain_community.tools.requests.tool.RequestsPutTool",
        "args": {
            "requests_wrapper": {
                "class": "langchain_community.utilities.requests.TextRequestsWrapper",
                "args": {
                    "headers": {}
                }
            },
            "allow_dangerous_requests": true
        }
    },

    # DELETE request tool
    # This enables HTTP DELETE requests to remove resources.
    "requests_delete": {
        "class": "langchain_community.tools.requests.tool.RequestsDeleteTool",
        "args": {
            "requests_wrapper": {
                "class": "langchain_community.utilities.requests.TextRequestsWrapper",
                "args": {
                    "headers": {}
                }
            },
            "allow_dangerous_requests": true
        }
    }
}
